# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Doxygen
        run: sudo apt-get update && sudo apt-get install -y doxygen

      - name: Run Doxygen
        run: doxygen Doxyfile

      - name: List files after Doxygen run
        run: ls -la ./docs

      - name: Upload Docs to GitHub Pages
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./docs

  deploy-docs:
    needs: build-docs
    environment:
      name: github-pages

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Docs
        uses: actions/download-artifact@v3
        with:
          name: docs

      - name: List files after downloading artifact
        run: ls -la ./pico-led-controller/pico-led-controller/docs

      - name: Deploy docs to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        with:
          folder: ./pico-led-controller/pico-led-controller/docs

      - name: Override page_url
        id: change-page-url
        run: echo "new_page_url=${{ steps.deployment.outputs.page_url }}notebook/" >> $GITHUB_OUTPUT
